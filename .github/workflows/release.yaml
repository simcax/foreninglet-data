name: release
on:
  pull_request:
    branches: [release]
    types:
      - closed

jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    environment: release
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Get release version
        run: echo "PACKAGE_VERSION=$(cat pyproject.toml|grep ^version|cut -d= -f2|tr -d \"|xargs)" >> $GITHUB_ENV
      - name: Install dependencies
        run: python -m pip install poetry
      - name: Build release
        run: poetry build
      - name: Archive release
        uses: actions/upload-artifact@v3
        with:
          name: release
          path: dist/*.whl
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
      - name: Extract version from commit message
        id: extract-version
        run: |
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          VERSION=v${{env.PACKAGE_VERSION}}
          echo "::set-output name=version::$VERSION"
      - name: Create tag
        run: |
          git tag ${{ steps.extract-version.outputs.version }}
          git push origin ${{ steps.extract-version.outputs.version }}
      - name: Do a Github Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{env.PACKAGE_VERSION}}
          release_name: Release v${{env.PACKAGE_VERSION}}
          body_path: releasenotes/${{env.PACKAGE_VERSION}}.md
          draft: false
          prerelease: true